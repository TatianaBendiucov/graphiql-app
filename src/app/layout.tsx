import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import Main from "@/components/Main";
import ClientThemeProvider from "@/utils/ClientThemeProvider";
import { dir } from 'i18next';
import { cookieName, fallbackLng, languages } from '../components/i18n/settings';
import { getCookie } from "cookies-next";
import ErrorBoundary from "@/components/ErrorBoundary";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export async function generateStaticParams() {
  return languages.map((lng) => ({ lng }));
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const lng = getCookie(cookieName) || fallbackLng;

  return (
    <html lang={lng} dir={dir(lng)}>
      <body className={inter.className}>
        <ErrorBoundary>
          <ClientThemeProvider>
            <Main>{children}</Main>
          </ClientThemeProvider>
        </ErrorBoundary>
      </body>
    </html>
  );
}

// import { ReactNode } from "react";
// import { ThemeProvider } from "../context/ThemeContext";
// import ErrorBoundary from "../components/ErrorBoundary";
// import "../index.css";
// import { ReduxProvider } from "src/store/reduxProvider";

// const Layout = ({ children }: { children: ReactNode }) => {
//   return (
//     <html>
//       <body>
//         <ThemeProvider>
//           <ReduxProvider>
//             <ErrorBoundary
//               fallback={<p>ErrorBoundary: Something went wrong.</p>}
//             >
//               {children}
//             </ErrorBoundary>
//           </ReduxProvider>
//         </ThemeProvider>
//       </body>
//     </html>
//   );
// };

// export default Layout;

